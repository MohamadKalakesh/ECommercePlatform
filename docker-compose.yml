services:
  product-service:
    build:
      context: ./src/ProductService
      dockerfile: ProductService.API/Dockerfile
    ports:
      - "8010:8080"
    volumes:
      - ./src/ProductService:/app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=ProductServiceDb;User=sa;Password=p@ssw0rd;TrustServerCertificate=true;Encrypt=false;
    command:
      ["sh", "-c", "dotnet watch run --urls=http://0.0.0.0:8080 --project ProductService.API/ProductService.API.csproj"]

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    depends_on:
      - product-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    command:
      [
        "dotnet",
        "watch",
        "run",
        "--urls=http://0.0.0.0:8080",
        "--project",
        "ApiGateway.csproj"
      ]

  auth-service:
    build:
      context: ./AuthService.API
      dockerfile: Dockerfile
    ports:
      - "8005:8080"
    volumes:
      - ./AuthService.API:/app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    command:
      [
        "dotnet",
        "watch",
        "run",
        "--urls=http://0.0.0.0:8080",
        "--project",
        "AuthService.API.csproj"
      ]

  # sqlserver:
  #   image: mcr.microsoft.com/mssql/server:2022-latest
  #   container_name: sqlserver
  #   environment:
  #     SA_PASSWORD: "p@ssw0rd"
  #     ACCEPT_EULA: "Y"
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #     - sqlserverdata:/var/opt/mssql

# volumes:
#   sqlserverdata:
